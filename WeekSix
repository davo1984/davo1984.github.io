This week I learned that objects are a developer's best friend. 
Not only do they store data but they organize it so it 
is easily reusable saving time, typing and errors. 

Good code is 
lean, efficient, and written so is is largely self-commenting.  Don't get me wrong; 
comments are needed to help in understanding what the developer intended but they 
are so valuable that they shouldn't be wasted to explain that variable w holds the 
intermediate value of our calculation or array q holds the keys used to access our 
data.  Naming conventions should be followed to allow the logic of the program to 
be seen clearly.

There is a difference between writing good code and being a good developer.  
A good developer designs programs and 
systems so they can be maintained, adapted and parts can be reused both 
right away and in the future.  The majority of the cost of a program (or system) 
is in the maintenance portion of its life.  Good development minimizes this cost.

Programmers hate typing because it wastes time.  Also the longer the 
code is the more likely there is an error in it simply because it is
harder to understand.